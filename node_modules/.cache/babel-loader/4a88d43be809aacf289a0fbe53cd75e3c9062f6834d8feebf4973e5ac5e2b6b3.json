{"ast":null,"code":"var _jsxFileName = \"/Users/senya/Desktop/react-feedbacks-hooks-hw/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // state = {\n  //   good: 0,\n  //   neutral: 0,\n  //   bad: 0,\n  //   total: 0,\n  //   positivePercentage: 0,\n  // };\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [positivePercentage, setPositivePercentage] = useState(0);\n\n  // addFeedback = (evt) => {\n  //   const objKey = evt.target.textContent.toLowerCase();\n  //   // this.setState((prevState) => {\n  //   //   return {\n  //   //     [objKey]: prevState[objKey] + 1,\n  //   //   };\n  //   // });\n  // };\n\n  countTotalFeedback = () => {\n    // this.setState((prevState) => ({\n    //   total: prevState.total + 1,\n    // }));\n    setTotal(prevTotal => prevTotal + 1);\n  };\n  countPositiveFeedbackPercentage = () => {\n    this.setState(prevState => ({\n      positivePercentage: Math.round(prevState.good / prevState.total * 100)\n    }));\n    setPositivePercentage(prevPositivePercentage => Math.round(good / total * 100));\n  };\n  {\n    const {\n      good,\n      neutral,\n      bad,\n      total,\n      positivePercentage\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: [\"Good\", \"Neutral\", \"Bad\"],\n          onLeaveFeedback: evt => {\n            this.addFeedback(evt);\n            this.countTotalFeedback();\n            this.countPositiveFeedbackPercentage();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: total === 0 ? /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: total,\n          positivePercentage: positivePercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n_s(App, \"hZEgdSoHCY1H8XsakyozjMbNCHI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Section","Notification","Statistics","FeedbackOptions","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","good","setGood","neutral","setNeutral","bad","setBad","total","setTotal","positivePercentage","setPositivePercentage","countTotalFeedback","prevTotal","countPositiveFeedbackPercentage","setState","prevState","Math","round","prevPositivePercentage","state","children","title","options","onLeaveFeedback","evt","addFeedback","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/senya/Desktop/react-feedbacks-hooks-hw/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\n\nconst App = () => {\n  // state = {\n  //   good: 0,\n  //   neutral: 0,\n  //   bad: 0,\n  //   total: 0,\n  //   positivePercentage: 0,\n  // };\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [positivePercentage, setPositivePercentage] = useState(0);\n\n  // addFeedback = (evt) => {\n  //   const objKey = evt.target.textContent.toLowerCase();\n  //   // this.setState((prevState) => {\n  //   //   return {\n  //   //     [objKey]: prevState[objKey] + 1,\n  //   //   };\n  //   // });\n  // };\n\n  countTotalFeedback = () => {\n    // this.setState((prevState) => ({\n    //   total: prevState.total + 1,\n    // }));\n    setTotal((prevTotal) => prevTotal + 1);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    this.setState((prevState) => ({\n      positivePercentage: Math.round((prevState.good / prevState.total) * 100),\n    }));\n    setPositivePercentage((prevPositivePercentage) =>\n      Math.round((good / total) * 100)\n    );\n  };\n\n   {\n    const { good, neutral, bad, total, positivePercentage } = this.state;\n    return (\n      <>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            options={[\"Good\", \"Neutral\", \"Bad\"]}\n            onLeaveFeedback={(evt) => {\n              this.addFeedback(evt);\n              this.countTotalFeedback();\n              this.countPositiveFeedbackPercentage();\n            }}\n          />\n        </Section>\n\n        <Section title={\"Statistics\"}>\n          {total === 0 ? (\n            <Notification />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,eAAe,MAAM,8CAA8C;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3E,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACgB,GAAG,EAAEC,MAAM,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACoB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;;EAE/D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAsB,kBAAkB,GAAGA,CAAA,KAAM;IACzB;IACA;IACA;IACAH,QAAQ,CAAEI,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;EACxC,CAAC;EAEDC,+BAA+B,GAAGA,CAAA,KAAM;IACtC,IAAI,CAACC,QAAQ,CAAEC,SAAS,KAAM;MAC5BN,kBAAkB,EAAEO,IAAI,CAACC,KAAK,CAAEF,SAAS,CAACd,IAAI,GAAGc,SAAS,CAACR,KAAK,GAAI,GAAG;IACzE,CAAC,CAAC,CAAC;IACHG,qBAAqB,CAAEQ,sBAAsB,IAC3CF,IAAI,CAACC,KAAK,CAAEhB,IAAI,GAAGM,KAAK,GAAI,GAAG,CACjC,CAAC;EACH,CAAC;EAEA;IACC,MAAM;MAAEN,IAAI;MAAEE,OAAO;MAAEE,GAAG;MAAEE,KAAK;MAAEE;IAAmB,CAAC,GAAG,IAAI,CAACU,KAAK;IACpE,oBACEvB,OAAA,CAAAE,SAAA;MAAAsB,QAAA,gBACExB,OAAA,CAACL,OAAO;QAAC8B,KAAK,EAAE,uBAAwB;QAAAD,QAAA,eACtCxB,OAAA,CAACF,eAAe;UACd4B,OAAO,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAE;UACpCC,eAAe,EAAGC,GAAG,IAAK;YACxB,IAAI,CAACC,WAAW,CAACD,GAAG,CAAC;YACrB,IAAI,CAACb,kBAAkB,CAAC,CAAC;YACzB,IAAI,CAACE,+BAA+B,CAAC,CAAC;UACxC;QAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eAEVjC,OAAA,CAACL,OAAO;QAAC8B,KAAK,EAAE,YAAa;QAAAD,QAAA,EAC1Bb,KAAK,KAAK,CAAC,gBACVX,OAAA,CAACJ,YAAY;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAEhBjC,OAAA,CAACH,UAAU;UACTQ,IAAI,EAAEA,IAAK;UACXE,OAAO,EAAEA,OAAQ;UACjBE,GAAG,EAAEA,GAAI;UACTE,KAAK,EAAEA,KAAM;UACbE,kBAAkB,EAAEA;QAAmB;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC;IAAA,eACV,CAAC;EAEP;AACF,CAAC;AAAC7B,EAAA,CAvEID,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAyET,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}