{"ast":null,"code":"import\"./App.css\";import{useState,useEffect}from\"react\";import Section from\"./components/Section/Section\";import Notification from\"./components/Notification/Notification\";import Statistics from\"./components/Statistics/Statistics\";import FeedbackOptions from\"./components/FeedbackOptions/FeedbackOptions\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[good,setGood]=useState(0);const[neutral,setNeutral]=useState(0);const[bad,setBad]=useState(0);const[total,setTotal]=useState(0);const[positivePercentage,setPositivePercentage]=useState(0);const addFeedback=evt=>{const feedbackType=evt.target.textContent.toLowerCase();if(feedbackType===\"good\"){setGood(prevGood=>prevGood+1);}else if(feedbackType===\"neutral\"){setNeutral(prevNeutral=>prevNeutral+1);}else if(feedbackType===\"bad\"){setBad(prevBad=>prevBad+1);}setTotal(prevTotal=>prevTotal+1);};useEffect(()=>{setPositivePercentage(Math.round(good/total*100));},[good,total]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Section,{title:\"Please leave feedback\",children:/*#__PURE__*/_jsx(FeedbackOptions,{options:[\"Good\",\"Neutral\",\"Bad\"],onLeaveFeedback:evt=>{addFeedback(evt);}})}),/*#__PURE__*/_jsx(Section,{title:\"Statistics\",children:total===0?/*#__PURE__*/_jsx(Notification,{}):/*#__PURE__*/_jsx(Statistics,{good:good,neutral:neutral,bad:bad,total:total,positivePercentage:positivePercentage})})]});};export default App;","map":{"version":3,"names":["useState","useEffect","Section","Notification","Statistics","FeedbackOptions","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","good","setGood","neutral","setNeutral","bad","setBad","total","setTotal","positivePercentage","setPositivePercentage","addFeedback","evt","feedbackType","target","textContent","toLowerCase","prevGood","prevNeutral","prevBad","prevTotal","Math","round","children","title","options","onLeaveFeedback"],"sources":["/Users/senya/Desktop/react-feedbacks-hooks-hw/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [positivePercentage, setPositivePercentage] = useState(0);\n\n  const addFeedback = (evt) => {\n    const feedbackType = evt.target.textContent.toLowerCase();\n\n    if (feedbackType === \"good\") {\n      setGood((prevGood) => prevGood + 1);\n    } else if (feedbackType === \"neutral\") {\n      setNeutral((prevNeutral) => prevNeutral + 1);\n    } else if (feedbackType === \"bad\") {\n      setBad((prevBad) => prevBad + 1);\n    }\n\n    setTotal((prevTotal) => prevTotal + 1);\n  };\n\n  useEffect(() => {\n    setPositivePercentage(Math.round((good / total) * 100));\n  }, [good, total]);\n\n  return (\n    <>\n      <Section title={\"Please leave feedback\"}>\n        <FeedbackOptions\n          options={[\"Good\", \"Neutral\", \"Bad\"]}\n          onLeaveFeedback={(evt) => {\n            addFeedback(evt);\n          }}\n        />\n      </Section>\n\n      <Section title={\"Statistics\"}>\n        {total === 0 ? (\n          <Notification />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,WAAW,CAClB,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,OAAO,KAAM,8BAA8B,CAClD,MAAO,CAAAC,YAAY,KAAM,wCAAwC,CACjE,MAAO,CAAAC,UAAU,KAAM,oCAAoC,CAC3D,MAAO,CAAAC,eAAe,KAAM,8CAA8C,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3E,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAAC,CACnC,KAAM,CAACe,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,CAAC,CAAC,CACzC,KAAM,CAACiB,GAAG,CAAEC,MAAM,CAAC,CAAGlB,QAAQ,CAAC,CAAC,CAAC,CACjC,KAAM,CAACmB,KAAK,CAAEC,QAAQ,CAAC,CAAGpB,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAACqB,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGtB,QAAQ,CAAC,CAAC,CAAC,CAE/D,KAAM,CAAAuB,WAAW,CAAIC,GAAG,EAAK,CAC3B,KAAM,CAAAC,YAAY,CAAGD,GAAG,CAACE,MAAM,CAACC,WAAW,CAACC,WAAW,CAAC,CAAC,CAEzD,GAAIH,YAAY,GAAK,MAAM,CAAE,CAC3BX,OAAO,CAAEe,QAAQ,EAAKA,QAAQ,CAAG,CAAC,CAAC,CACrC,CAAC,IAAM,IAAIJ,YAAY,GAAK,SAAS,CAAE,CACrCT,UAAU,CAAEc,WAAW,EAAKA,WAAW,CAAG,CAAC,CAAC,CAC9C,CAAC,IAAM,IAAIL,YAAY,GAAK,KAAK,CAAE,CACjCP,MAAM,CAAEa,OAAO,EAAKA,OAAO,CAAG,CAAC,CAAC,CAClC,CAEAX,QAAQ,CAAEY,SAAS,EAAKA,SAAS,CAAG,CAAC,CAAC,CACxC,CAAC,CAED/B,SAAS,CAAC,IAAM,CACdqB,qBAAqB,CAACW,IAAI,CAACC,KAAK,CAAErB,IAAI,CAAGM,KAAK,CAAI,GAAG,CAAC,CAAC,CACzD,CAAC,CAAE,CAACN,IAAI,CAAEM,KAAK,CAAC,CAAC,CAEjB,mBACER,KAAA,CAAAF,SAAA,EAAA0B,QAAA,eACE5B,IAAA,CAACL,OAAO,EAACkC,KAAK,CAAE,uBAAwB,CAAAD,QAAA,cACtC5B,IAAA,CAACF,eAAe,EACdgC,OAAO,CAAE,CAAC,MAAM,CAAE,SAAS,CAAE,KAAK,CAAE,CACpCC,eAAe,CAAGd,GAAG,EAAK,CACxBD,WAAW,CAACC,GAAG,CAAC,CAClB,CAAE,CACH,CAAC,CACK,CAAC,cAEVjB,IAAA,CAACL,OAAO,EAACkC,KAAK,CAAE,YAAa,CAAAD,QAAA,CAC1BhB,KAAK,GAAK,CAAC,cACVZ,IAAA,CAACJ,YAAY,GAAE,CAAC,cAEhBI,IAAA,CAACH,UAAU,EACTS,IAAI,CAAEA,IAAK,CACXE,OAAO,CAAEA,OAAQ,CACjBE,GAAG,CAAEA,GAAI,CACTE,KAAK,CAAEA,KAAM,CACbE,kBAAkB,CAAEA,kBAAmB,CACxC,CACF,CACM,CAAC,EACV,CAAC,CAEP,CAAC,CAED,cAAe,CAAAT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}